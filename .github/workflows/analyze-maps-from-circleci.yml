name: Analyze Maps from CircleCI

on:
  repository_dispatch:
    types:
      # Run on webhook
      - run_appmap_analysis

# AWS OIDC Related Permissions
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
  statuses: write # For updating commit status
  # AppMap Specific Permissions
  actions: read
  checks: write
  pull-requests: write

jobs:
  download_and_archive_base_revision:
    timeout-minutes: 30
    env:
      appmap_storage_bucket: circleci-appmaps
      base_sha: ${{ github.event.client_payload.base_sha }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set commit status as pending
        uses: myrotvorets/set-commit-status-action@f8a3f50eca0d32f3e12dc3a98792bb588bf29626
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending
          context: AppMap Analysis
          sha: ${{ github.event.client_payload.head_sha }}

      - name: Install AppMap tools
        uses: getappmap/install-action@v1
        with:
          install-appmap-library: false

      - name: Check for existing baseline archive
        id: check_for_baseline
        env:
          GITHUB_TOKEN: ${{ github.token }}
        continue-on-error: true  
        run: |
          appmap restore --check --revision ${base_sha} --github-repo ${GITHUB_REPOSITORY} --exact 
        
      - name: configure aws credentials
        if: steps.check_for_baseline.outcome == 'failure'
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::823624377950:role/GitHub_Read_Only_S3
          role-session-name: GitHub_Read_Only_S3
          aws-region: us-west-2

      - name: Download and extract appmaps
        if: steps.check_for_baseline.outcome == 'failure'
        run: | 
          aws s3 cp s3://${appmap_storage_bucket}/${base_sha}.tar ${base_sha}.tar 
          tar xvf ${base_sha}.tar
          
      - name: Archive AppMaps
        if: steps.check_for_baseline.outcome == 'failure'
        uses: getappmap/archive-action@v1
        with: 
          revision: ${base_sha}

  appmap-analysis:
    needs: [download_and_archive_base_revision]
    runs-on: ubuntu-latest
    env:
      appmap_storage_bucket: circleci-appmaps
      head_sha: ${{ github.event.client_payload.head_sha }}
    steps:
      - uses: actions/checkout@v3

      - name: Install AppMap tools
        uses: getappmap/install-action@v1
        with:
          directory: .
          install-appmap-library: false
      
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::823624377950:role/GitHub_Read_Only_S3
          role-session-name: GitHub_Read_Only_S3
          aws-region: us-west-2

      - name: Download and extract appmaps
        run: | 
          aws s3 cp s3://${appmap_storage_bucket}/${head_sha}.tar ${head_sha}.tar 
          tar xvf ${head_sha}.tar

      - name: Get only the most recent issue with this head commit
        run: echo LATESTPR=$(node searchPullRequest.js --ownerRepo=${GITHUB_REPOSITORY} --commit=${head_sha}) >> "$GITHUB_ENV"

      - name: Analyze AppMaps
        uses: getappmap/analyze-action@v1
        with:
          issue-number: ${{env.LATESTPR}}
          directory: .
          base-revision: ${{ github.event.client_payload.base_sha }}
          head-revision: ${{ github.event.client_payload.head_sha }}

      - name: Update Commit Status
        uses: myrotvorets/set-commit-status-action@v2.0.0
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          context: AppMap Analysis
          sha: ${{ github.event.client_payload.head_sha }}